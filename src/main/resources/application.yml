spring:
    application:
      name: spring-batch-virtual-thread

    datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: root
      url: jdbc:mysql://localhost:3306/vehicle_db?createDatabaseIfNotExist=true

    jpa:
      show-sql: true
      generate-ddl: true
      hibernate:
        ddl-auto: update # Options: none, update, create, create-drop
#      properties:
#        dialect: org.hibernate.dialect.MySQL8Dialect

    batch:
      job:
        enabled: true #Disable job run at startup
      #    The initialize-schema property controls when Spring Batch should initialize or reinitialize the schema used for batch processing metadata tables.
      #    These tables store information about job executions, step executions, and other related metadata.
      #    ALWAYS: Spring Batch will always initialize (or reinitialize) the schema.
      #    NEVER: Spring Batch will never initialize or modify the schema.
      #    IF_ABSENT: Spring Batch will only initialize the schema if it does not already exist.
      jdbc:
        initialize-schema: always # related to initialize schema

    #This configuration avoid using the starter-web tomcat
    main:
      web-application-type: none

  #Mail configuration after adding the mailhog within the docker compose yml file and start the docker compose with docker-compose up command
#    mail:
#      host: localhost
#      port: 8025
#      username: ""
#      password: ""
#      properties:
#        mail:
#          smtp:
#            auth: false

  #Gmail Server message configuration
  #Added the line below in your configuration VM and make sure to specify the rigth username and password
  #MAIL_HOST=smtp.gmail.com;MAIL_PORT=587;MAIL_USERNAME=Your username;MAIL_PASSWORD=Your password
  # if the 2FA is activated for your email, you need to follow these step to generate the password
  #  1-Go to your Google Account settings.
  #  2-Navigate to "Security".
  #  3-Under "Signing in to Google", select "App passwords".
  #  4-Generate a new app password for your email application and use that password in your configuration.
    mail:
      host: MAIL_HOST
      port: MAIL_PORT
      username: MAIL_USERNAME #Sender email
      password:  MAIL_PASSWORD # sender password
      protocol: smtp
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
              required: true

#This is the dynamic list. You can add another key, value.
input:
  files:
    vehicles: /data/tesla_invoices.csv
    vehicles1: /data/tesla_invoices1.csv
    vehicles2: /data/tesla_invoices2.csv
    vehicles3: /data/tesla_invoices3.csv
  jsons:
    vehicles: /data/vehicle-invoices.json
    vehicles1: /data/vehicle-invoices1.json
    vehicles2: /data/vehicle-invoices2.json
    vehicles3: /data/vehicle-invoices3.json
  pdfs:
    invoices: /data/resource/invoices.pdf
    invoices1: /data/resource/invoices1.pdf
    invoices2: /data/resource/invoices2.pdf
    invoices3: /data/resource/invoices3.pdf
    img1: /data/resource/img1.png
    img2: /data/resource/img2.png
    img3: /data/resource/img3.png
    img4: /data/resource/img4.png
  all: /data/resource/*.*


